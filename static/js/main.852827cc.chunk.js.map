{"version":3,"sources":["images/logo.png","components/Header/Header.js","utilities/storage.js","components/Cart/Cart.js","components/Product/Product.js","components/Shop/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","href","setLocalStorage","cart","localStorage","setItem","JSON","stringify","getLocalStorage","getItem","Cart","props","itemsOrdered","reduce","accumulator","current","quantity","items","price","shipping","totalBeforeTax","estimatedTax","orderTotal","toFixed","onClick","removeItem","window","location","reload","Product","product","name","img","seller","stock","star","initialRating","emptySymbol","fullSymbol","readonly","handleAddToCart","icon","faShoppingCart","Shop","useState","products","setProducts","setCart","displayProducts","setDisplayProducts","useEffect","fetch","then","res","json","data","length","savedCart","exists","parse","getData","storedCart","key","addedProduct","find","push","newCart","id","exist","shopping_cart","addToLocalStorage","type","onChange","e","searchedText","target","value","matchedProduct","filter","toLowerCase","includes","placeholder","style","color","marginLeft","fontSize","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.852827cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0dd9a510.png\";","import React from 'react';\r\nimport './Header.css'\r\nimport logo from '../../images/logo.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={logo} alt=\"\" />\r\n            <nav>\r\n                <a href=\"/shop\">Shop</a>\r\n                <a href=\"/review\">Order Review</a>\r\n                <a href=\"/inventory\">Manage Inverntory</a>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","//add product to fake database/local storage\r\nconst addToLocalStorage = id => {\r\n    const exist = getLocalStorage();\r\n    let shopping_cart = {};\r\n    if (!exist) {\r\n        shopping_cart[id] = 1;\r\n    }\r\n    else {\r\n        shopping_cart = JSON.parse(exist);\r\n        if (shopping_cart[id]) {\r\n            shopping_cart[id] = shopping_cart[id] + 1;\r\n        }\r\n        else {\r\n            shopping_cart[id] = 1;\r\n        }\r\n    }\r\n    setLocalStorage(shopping_cart);\r\n}\r\n\r\nconst setLocalStorage = (cart) => localStorage.setItem('shopping_cart', JSON.stringify(cart));\r\nconst getLocalStorage = () => localStorage.getItem('shopping_cart');\r\n\r\nconst getData = () => {\r\n    const exists = getLocalStorage();\r\n    return exists ? JSON.parse(exists) : {};\r\n}\r\n\r\nconst removeFromLocalStorage = id => {\r\n    const exist = getLocalStorage();\r\n    if (!exist) {\r\n        return;\r\n    }\r\n    else {\r\n        const shopping_cart = JSON.parse(exist);\r\n        delete shopping_cart[id];\r\n        setLocalStorage(shopping_cart);\r\n    }\r\n}\r\n\r\nconst clearTheCart = () => {\r\n    localStorage.removeItem('shopping_cart');\r\n}\r\n\r\nexport { addToLocalStorage, getData, removeFromLocalStorage, clearTheCart };","import React from 'react';\r\nimport { clearTheCart } from '../../utilities/storage';\r\nimport './Cart.css';\r\n\r\nconst Cart = props => {\r\n    const { cart } = props;\r\n    const itemsOrdered = cart.reduce((accumulator, current) => accumulator + (!current.quantity ? 1 : current.quantity), 0);\r\n    const items = cart.reduce((accumulator, current) => accumulator + current.price * (!current.quantity ? 1 : current.quantity), 0);\r\n    const shipping = cart.reduce((accumulator, current) => accumulator + current.shipping * (!current.quantity ? 1 : current.quantity), 0);\r\n    const totalBeforeTax = items + shipping;\r\n    const estimatedTax = totalBeforeTax * 0.15; //let 15% tax included\r\n    const orderTotal = totalBeforeTax + estimatedTax;\r\n\r\n    return (\r\n        <div>\r\n            <h3>Order Summury</h3>\r\n            <p>Items Ordered: {itemsOrdered}</p>\r\n            <table>\r\n                <tr>\r\n                    <td>Items:</td>\r\n                    <td>${items.toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Shipping & Handling:</td>\r\n                    <td>${shipping.toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Total before Tax:</td>\r\n                    <td>${totalBeforeTax.toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td >Extimated Tax:</td>\r\n                    <td>${estimatedTax.toFixed(2)}</td>\r\n                </tr>\r\n                <tr className=\"order-total\">\r\n                    <td>Order Total:</td>\r\n                    <td>${orderTotal.toFixed(2)}</td>\r\n                </tr>\r\n            </table>\r\n            <button\r\n                className=\"clear-btn\"\r\n                onClick={() => {\r\n                    clearTheCart();\r\n                    window.location.reload()\r\n                }}\r\n            >Clear Cart</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport './Product.css'\r\nimport Rating from 'react-rating';\r\n\r\nconst Product = (props) => {\r\n    const { name, img, seller, price, stock, star } = props.product;\r\n    return (\r\n        <div className=\"product\">\r\n            <div>\r\n                <img src={img} alt=\"\" />\r\n            </div>\r\n            <div className=\"product-info\">\r\n                <h3 className=\"product-title\">{name}</h3>\r\n                <p><small>by: {seller}</small></p>\r\n                <p className=\"price\">Price: ${price}</p>\r\n                <Rating\r\n                    initialRating={star}\r\n                    emptySymbol=\"far fa-star rating-color-empty\"\r\n                    fullSymbol=\"fas fa-star rating-color-full\"\r\n                    readonly\r\n                ></Rating>\r\n                <p><small>only {stock} left in stock - order soon</small></p>\r\n                <button\r\n                    className=\"add-to-cart-btn\"\r\n                    onClick={() => props.handleAddToCart(props.product)}\r\n                ><FontAwesomeIcon icon={faShoppingCart} /> add to cart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","import React, { useEffect, useState } from 'react';\r\nimport { addToLocalStorage, getData } from '../../utilities/storage';\r\nimport Cart from '../Cart/Cart';\r\nimport Product from '../Product/Product';\r\nimport './Shop.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n    const [displayProducts, setDisplayProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('./products.JSON')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setProducts(data);\r\n                setDisplayProducts(data);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (products.length) {\r\n            const savedCart = getData();\r\n            const storedCart = [];\r\n            for (const key in savedCart) {\r\n                const addedProduct = products.find(product => product.key === key);\r\n                if (addedProduct) {\r\n                    const quantity = savedCart[key];\r\n                    addedProduct.quantity = quantity;\r\n                    storedCart.push(addedProduct);\r\n                }\r\n            }\r\n            setCart(storedCart);\r\n        }\r\n    }, [products]);\r\n\r\n    const handleAddToCart = product => {\r\n        const newCart = [...cart, product]\r\n        setCart(newCart);\r\n        //adding items into local storage\r\n        addToLocalStorage(product.key);\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        const searchedText = e.target.value;\r\n        const matchedProduct = products.filter(product => product.name.toLowerCase().includes(searchedText.toLowerCase()));\r\n        setDisplayProducts(matchedProduct);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={handleSearch}\r\n                    placeholder=\"search for products\" />\r\n                <FontAwesomeIcon style={{ color: 'whitesmoke', marginLeft: '20px', fontSize: '20px' }} icon={faShoppingCart} />\r\n                <p className=\"product-count\">{cart.reduce((accumulator, current) => accumulator + (!current.quantity ? 1 : current.quantity), 0)}</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"shop-container\">\r\n                    <div className=\"product-container\">\r\n                        <h2>Products</h2>\r\n                        {\r\n                            displayProducts.map(product => <Product\r\n                                key={product.key}\r\n                                product={product}\r\n                                handleAddToCart={handleAddToCart}\r\n                            ></Product>)\r\n                        }\r\n                    </div>\r\n                    <div className=\"cart-container\">\r\n                        <div className=\"top-title\">\r\n                            <Cart cart={cart}></Cart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Shop;","import './App.css';\nimport Header from './components/Header/Header';\nimport Shop from './components/Shop/Shop';\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <Shop></Shop>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}